{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ifctrano","text":"ifctrano"},{"location":"#overview","title":"Overview","text":"<p>ifctrano is yet another IFC to energy simulation tool designed to translate Industry Foundation Classes (IFC) models into energy simulation models in Modelica.</p>"},{"location":"#key-differentiator","title":"Key Differentiator","text":"<p>Unlike most translation approaches that rely on space boundaries (IfcRelSpaceBoundary), ifctrano operates solely on geometrical representation. This is crucial because space boundaries are rarely available in IFC models. Instead, ifctrano requires at least the definition of IfcSpace objects to build energy simulation models.</p>"},{"location":"#space-zone-mapping","title":"Space-Zone Mapping","text":"<p>For now, each space is considered as a single thermal zone, and the necessary space boundaries are automatically generated.</p>"},{"location":"#why-ifctrano","title":"Why ifctrano?","text":"<p>\u2705 No reliance on IfcRelSpaceBoundary</p> <p>\u2705 Works with geometric representation only</p> <p>\u2705 Supports Modelica-based energy simulation</p> <p>\u2705 Tested on multiple open-source IFC files</p>"},{"location":"#research-background","title":"Research &amp; Background","text":"<p>ifctrano is inspired by existing research, including this journal paper: Automated Translation of IFC to Energy Models. However, it takes a more robust and practical approach that doesn\u2019t require explicit space boundaries.</p>"},{"location":"#open-source-ifc-test-files","title":"Open Source IFC Test Files","text":"<p>ifctrano has been tested using open-source IFC files from various repositories:</p> <ul> <li>\ud83d\udc0b BIM Whale IFC Samples</li> <li>\ud83c\udfd7\ufe0f IfcSampleFiles</li> <li>\ud83c\udfad BIM2Modelica</li> <li>\ud83d\udd78\ufe0f Ifc2Graph Test Files</li> <li>\ud83d\udd13 Open Source BIM</li> </ul>"},{"location":"#installation-usage","title":"Installation &amp; Usage","text":"<p>(Installation and usage instructions will be provided here, depending on the package distribution method.)</p> <p>\ud83d\udca1 ifctrano aims to make energy simulation model generation from IFC files simpler, more accessible, and less reliant on incomplete IFC attributes. \ud83d\ude80</p>"},{"location":"explanation/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"getting-started/installation/","title":"\ud83d\ude80 Installation","text":""},{"location":"getting-started/installation/#install-ifctrano","title":"\ud83d\udce6 Install <code>ifctrano</code>","text":"<p>Warning</p> <p>Trano requires python 3.9 or higher and docker to be installed on the system.</p> <p>ifctrano is a Python package that can be installed via pip.</p> <pre><code>pip install ifctrano\n</code></pre>"},{"location":"getting-started/installation/#verify-installation","title":"\u2705 Verify Installation","text":"<p>Run the following commands to ensure everything is working:</p> <pre><code>ifctrano --help\nifctrano verify\n</code></pre>"},{"location":"getting-started/installation/#optional-dependencies","title":"\ud83d\udd27 Optional Dependencies","text":""},{"location":"getting-started/installation/#docker-for-simulation","title":"\ud83d\udc33 Docker (for simulation)","text":"<p>To enable model simulation using the official OpenModelica Docker image, install Docker Desktop:</p> <p>\ud83d\udc49 https://docs.docker.com/desktop/</p> <p>Required for using the <code>--simulate-model</code> flag.</p>"},{"location":"getting-started/installation/#graphviz-for-layout-visualization","title":"\ud83e\udde0 Graphviz (for layout visualization)","text":"<p><code>ifctrano</code> leverages Graphviz to optimize component layout in generated Modelica models. It is optional, but recommended.</p>"},{"location":"getting-started/installation/#install-on-windows","title":"\ud83d\udce5 Install on Windows","text":"<ul> <li>Download and install from: https://graphviz.org/download/</li> <li>Add the Graphviz <code>bin</code> folder to your system <code>PATH</code>.</li> </ul>"},{"location":"getting-started/installation/#install-on-linux","title":"\ud83d\udc27 Install on Linux","text":"<pre><code>sudo apt update\nsudo apt install graphviz\n</code></pre>"},{"location":"getting-started/installation/#usage","title":"\u2699\ufe0f Usage","text":""},{"location":"getting-started/installation/#generate-modelica-models-from-ifc","title":"\ud83d\udcc1 Generate Modelica models from IFC","text":""},{"location":"getting-started/installation/#using-the-buildings-library","title":"\ud83c\udfe2 Using the Buildings library","text":"<pre><code>ifctrano create /path/to/your.ifc\n</code></pre>"},{"location":"getting-started/installation/#using-the-ideas-library","title":"\ud83c\udfeb Using the IDEAS library","text":"<pre><code>ifctrano create /path/to/your.ifc IDEAS\n</code></pre>"},{"location":"getting-started/installation/#using-the-reduced-order-library","title":"\ud83e\uddee Using the Reduced Order library","text":"<pre><code>ifctrano create /path/to/your.ifc reduced_order\n</code></pre>"},{"location":"getting-started/installation/#show-space-boundaries","title":"\ud83e\uddf1 Show Space Boundaries","text":"<p>To visualize the computed space boundaries:</p> <pre><code>ifctrano create /path/to/your.ifc --show-space-boundaries\n</code></pre>"},{"location":"getting-started/installation/#simulate-the-model","title":"\ud83d\udd01 Simulate the Model","text":"<p>Run a full simulation after model generation:</p> <pre><code>ifctrano create /path/to/your.ifc --simulate-model\n</code></pre> <p>Make sure Docker is installed and running before simulating.</p>"},{"location":"how-to%20guides/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"tutorials/many_zones_model/","title":"Many zones model","text":"<p>This tutorial demonstrates how to generate a Modelica model and open it with OpenModelica for the multizone BIM model displayed below.</p> <p></p> <p></p> <p>The file can be found in the repository's <code>tests</code> folder.</p> <pre><code>from ifctrano.building import Building\nbuilding = Building.from_ifc(path_to_ifc_file)\nbuilding.save_model()\n</code></pre> <p>The code snippet above creates a Modelica model from the IFC file in the same folder. You can then open this model in OpenModelica.</p> <p></p> <p>To display the generated space boundaries alongside the Modelica model and simulate simultaneously from the command line, use the following command:</p> <pre><code>ifctrano create path_to_ifc_file.ifc --show-space-boundaries --simulate-model\n</code></pre> <p>The generated space boundaries will be displayed as illustrated in the figure below.</p> <p></p> <p>The simulation output will open automatically.</p> <p></p>"},{"location":"tutorials/realistic_model/","title":"Realistic model","text":"<p>This tutorial demonstrates how Ifctrano manages realistic BIM models. This example is based on the duplex apartment model available online. The model realistically represents a two-floor duplex apartment with multiple rooms, as shown in the figures below.</p> <p></p> <p></p> <p>The file is located in the tests folder of the repository. You can use the command line interface to generate the model, as demonstrated below (similar to the previous tutorials).</p> <pre><code>from ifctrano.building import Building\nbuilding = Building.from_ifc(path_to_ifc_file)\nbuilding.save_model()\n</code></pre> <p>The code snippet above generates a Modelica model of the IFC file in the same directory as the IFC file. This model can subsequently be opened in OpenModelica.</p> <p></p> <p>To display the generated space boundaries alongside the Modelica model and run the simulation simultaneously via the command line, use the following command:</p> <pre><code>ifctrano create path_to_ifc_file.ifc --show-space-boundaries --simulate-model\n</code></pre> <p>The generated space boundaries will be displayed as illustrated in the figure below.</p> <p></p> <p>The simulation output will automatically open in your local browser.</p> <p></p>"},{"location":"tutorials/two_zones_model/","title":"Two zones model","text":"<p>This tutorial demonstrates how to generate a Modelica model and open it with OpenModelica for the two-zone BIM model shown below.</p> <p></p> <p></p> <p>The file is located in the repository's tests folder.</p> <pre><code>from ifctrano.building import Building\nbuilding = Building.from_ifc(path_to_ifc_file)\nbuilding.show()\nbuilding.save_model()\n</code></pre> <p>The code snippet above generates a Modelica model of the IFC file in the same directory. You can then open this model in OpenModelica. Use the command <code>building.show()</code> to display the generated space boundaries, as illustrated in the figure below.</p> <p></p> <p>Ifctrano can also be executed via the command line interface, as demonstrated below.</p> <p>Run the <code>help</code> command to view the available options.</p> <pre><code>ifctrano create --help\n</code></pre> <p>To create a model, run the following command:</p> <pre><code>ifctrano create path_to_ifc_file.ifc\n</code></pre> <p>To display the generated space boundaries alongside the Modelica model, run the following command.</p> <pre><code>ifctrano create path_to_ifc_file.ifc --show-space-boundaries\n</code></pre> <p>This command displays the space boundary shown in the figure above.</p> <p>The generated model, as shown in the figure below, can be opened in OpenModelica, provided the relevant libraries are loaded. By default, Ifctrano utilizes the Buildings library. You can open the model in OpenModelica using the following command.</p> <p></p> <p>Provided that Docker is installed on the host computer, Ifctrano can directly simulate the model with the following command:</p> <pre><code>ifctrano create path_to_ifc_file.ifc --show-space-boundaries --simulate-model\n</code></pre> <p>If the simulation is successful, the results will be saved locally, and an HTML report will be automatically generated to display key performance indicators (KPIs), as illustrated in the figure below.</p> <p></p>"},{"location":"tutorials/use_different_libraries/","title":"Use different libraries","text":"<p>By default, ifctrano utilizes the Buildings library, but it can also integrate with other libraries. Below is an example of using additional Modelica libraries with ifctrano. </p> <p>ifctrano can generate energy models using detailed libraries like Buildings and IDEAS, as well as reduced-order models from the AIXLib library and the ISO 13790 library from the Buildings library. The following example demonstrates how to use the IDEAS library with ifctrano.</p> <pre><code>from ifctrano.building import Building\nbuilding.save_model(library=\"IDEAS\")\n</code></pre> <p>From the command line, specify the library with the <code>--library</code> option. The command below generates a model using the IDEAS library.</p> <pre><code>ifctrano create path_to_ifc_file.ifc --library IDEAS\n</code></pre> <p>ifctrano will rebuild the model using the IDEAS library, as demonstrated below. The generated model can be opened in OpenModelica, as shown in the screenshot below.</p> <p></p>"}]}