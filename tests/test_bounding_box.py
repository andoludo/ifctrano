import numpy as np

from ifctrano.base import Vector
from ifctrano.bounding_box import OrientedBoundingBox


def test_oriented_bounding_box_along_x() -> None:
    vertices = [
        [0.0, 0.0, 0.0],
        [10.0, 0.0, 0.0],
        [10.0, 0.5, 0.0],
        [0.0, 0.5, 0.0],
        [0.0, 0.0, 2.0],
        [10.0, 0.0, 2.0],
        [10.0, 0.5, 2.0],
        [0.0, 0.5, 2.0],
    ]

    obb = OrientedBoundingBox.from_vertices(vertices=vertices)
    assert obb.faces.description() == [
        ((0.0, 0.0, 0.0, 0.5), (1.0, 0.0, 0.0)),
        ((0.0, 0.0, 10.0, 0.0), (0.0, -1.0, 0.0)),
        ((0.0, 0.0, 10.0, 0.5), (0.0, 0.0, 1.0)),
        ((0.0, 0.0, 10.0, 0.5), (0.0, 0.0, 1.0)),
        ((0.0, 0.5, 10.0, 0.5), (0.0, -1.0, 0.0)),
        ((10.0, 0.0, 10.0, 0.5), (1.0, 0.0, 0.0)),
    ]


np.array(
    [
        [0.0, 0.0, 0.0],
        [0.0, 10.0, 0.0],
        [0.5, 10.0, 0.0],
        [0.5, 0.0, 0.0],
        [0.0, 0.0, 2.0],
        [0.0, 10.0, 2.0],
        [0.5, 10.0, 2.0],
        [0.5, 0.0, 2.0],
    ]
)

vertices = [
    [0.0, 0.0, 0.0],
    [7.07106781, 7.07106781, 0.0],
    [6.71751442, 7.4246212, 0.0],
    [-0.35355339, 0.35355339, 0.0],
    [0.0, 0.0, 2.0],
    [7.07106781, 7.07106781, 2.0],
    [6.71751442, 7.4246212, 2.0],
    [-0.35355339, 0.35355339, 2.0],
]


def test_oriented_bounding_box_not_aligned_with_coordinate() -> None:
    vertices = [
        [0.0, 0.0, 0.0],
        [4.47213595, -8.94427191, 0.0],
        [4.91934955, -8.72066511, 0.0],
        [0.4472136, 0.2236068, 0.0],
        [0.0, 0.0, 2.0],
        [4.47213595, -8.94427191, 2.0],
        [4.91934955, -8.72066511, 2.0],
        [0.4472136, 0.2236068, 2.0],
    ]
    Vector(x=-0.45, y=0.89, z=0.0).to_array()*10

    obb = OrientedBoundingBox.from_vertices(vertices=vertices)
    face = obb.faces.faces[4]
    face.get_2d_polygon(coordinate_system=face.coordinate_system)
    assert obb.faces.description() == [
        (
            [
                [0.0, 0.0, 0.0],
                [4.5, -8.9, 0.0],
                [4.5, -8.9, 2.0],
                [0.0, 0.0, 2.0],
                [0.0, 0.0, 0.0],
            ],
            (-0.89, -0.45, 0.0),
        ),
        (
            [
                [0.44, 0.22, 0.0],
                [0.0, 0.0, 0.0],
                [0.0, 0.0, 2.0],
                [0.44, 0.22, 2.0],
                [0.44, 0.22, 0.0],
            ],
            (-0.45, 0.89, 0.0),
        ),
        (
            [
                [0.44, 0.22, 0.0],
                [0.0, 0.0, 0.0],
                [4.5, -8.9, 0.0],
                [4.94, -8.68, 0.0],
                [0.44, 0.22, 0.0],
            ],
            (0.0, 0.0, 1.0),
        ),
        (
            [
                [0.44, 0.22, 0.0],
                [4.94, -8.68, 0.0],
                [4.94, -8.68, 2.0],
                [0.44, 0.22, 2.0],
                [0.44, 0.22, 0.0],
            ],
            (-0.89, -0.45, 0.0),
        ),
        (
            [
                [0.44, 0.22, 2.0],
                [0.0, 0.0, 2.0],
                [4.5, -8.9, 2.0],
                [4.94, -8.68, 2.0],
                [0.44, 0.22, 2.0],
            ],
            (0.0, 0.0, 1.0),
        ),
        (
            [
                [4.94, -8.68, 0.0],
                [4.5, -8.9, 0.0],
                [4.5, -8.9, 2.0],
                [4.94, -8.68, 2.0],
                [4.94, -8.68, 0.0],
            ],
            (-0.45, 0.89, 0.0),
        ),
    ]


# np.array(
#     [
#         [0.0, 0.0, 0.0],
#         [4.47213595, -8.94427191, 0.0],
#         [4.91934955, -8.72066511, 0.0],
#         [0.4472136, 0.2236068, 0.0],
#         [0.0, 0.0, 2.0],
#         [4.47213595, -8.94427191, 2.0],
#         [4.91934955, -8.72066511, 2.0],
#         [0.4472136, 0.2236068, 2.0],
#     ]
# )


np.array(
    [
        [1.46446609, 0.46446609, 1.0],
        [8.53553391, 7.53553391, 1.0],
        [8.18198052, 7.8890873, 1.0],
        [1.1109127, 0.81801948, 1.0],
        [1.46446609, 0.46446609, 3.0],
        [8.53553391, 7.53553391, 3.0],
        [8.18198052, 7.8890873, 3.0],
        [1.1109127, 0.81801948, 3.0],
    ]
)


def test_oriented_bounding_box_compare_faces() -> None:
    vertices = [
        [0.0, 0.0, 0.0],
        [4.47213595, -8.94427191, 0.0],
        [4.91934955, -8.72066511, 0.0],
        [0.4472136, 0.2236068, 0.0],
        [0.0, 0.0, 2.0],
        [4.47213595, -8.94427191, 2.0],
        [4.91934955, -8.72066511, 2.0],
        [0.4472136, 0.2236068, 2.0],
    ]

    vertices_ = (np.array(vertices) + Vector(x=-0.45, y=0.89, z=0.0).to_array()*10).tolist()

    obb_1 = OrientedBoundingBox.from_vertices(vertices=vertices)
    obb_2   = OrientedBoundingBox.from_vertices(vertices=vertices_)
    a = 12